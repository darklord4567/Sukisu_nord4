# .github/workflows/release-kernel.yml

name: Create Kernel Release

on:
  workflow_dispatch:
    inputs:
      run_url:
        description: 'Paste the full URL of the successful build run'
        required: true
      device_name:
        description: 'Device name for the release (e.g., oneplus_nord_4_v)'
        required: true
        default: 'oneplus_nord_4_v'

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: read
    env:
      TZ: Asia/Kolkata
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Make token available to all steps

    steps:
    
      - name: Extract Run ID from URL
        run: |
          RUN_ID=$(basename "${{ inputs.run_url }}")
          echo "Extracted Run ID: $RUN_ID"
          echo "RUN_ID=$RUN_ID" >> $GITHUB_ENV

      - name: Generate IST Release Tag
        run: |
          TAG="${{ inputs.device_name}}-$(date +'%Y-%m-%d_%H-%M')-IST"
          echo "Generated Tag: $TAG"
          echo "tag=$TAG" >> $GITHUB_ENV

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          run_id: ${{ inputs.run_id }}
          path: ./downloaded-artifacts

      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.NEW_TAG }}
          prerelease: false
          release_name: "Kernel Release for ${{ inputs.device_name }} - $(date +'%d %B %Y, %I:%M %p IST')" 
          body: SukiSU Ultra Kernel for ${{ inputs.device_name }}

            **Flasher Recommendation:**
            -> [Kernel Flasher](https://github.com/fatalcoder524/KernelFlasher)

            **Manager App:**
            -> [SukiSU-Ultra Manager](https://github.com/SukiSU-Ultra/SukiSU-Ultra/releases/latest)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Assets Dynamically
        run: |
          for file in ./downloaded-artifacts/Susfs-Kernel_*/*; do
              if [ -d "$file" ]; then
                  continue
              fi
              echo "Uploading $file..."
              gh release upload ${{ env.NEW_TAG }} "$file"
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NEW_TAG: ${{ env.NEW_TAG }}

      - name: Display Files Uploaded
        run: |
          echo "GitHub release created with the following files:"
          ls ./downloaded-artifacts/**/*
