name: Kernel Image.gz Only Build (With kernel_src)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y bc bison build-essential ccache flex \
            git libssl-dev python3 rsync unzip zip zlib1g-dev \
            libncurses5-dev libelf-dev lz4 device-tree-compiler curl

      - name: Install Repo Tool
        run: |
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/repo
          chmod a+x ~/repo
          sudo mv ~/repo /usr/local/bin/repo

      - name: Init Repo & Add Local Manifest (Prebuilts Only)
        run: |
          mkdir kernel_workspace && cd kernel_workspace
          repo init -u https://github.com/darklord4567/Sukisu_nord4 -m default.mxl --depth=1


      - name: Sync AOSP Prebuilts
        run: |
          cd kernel_workspace
          repo sync -c --no-tags --no-clone-bundle --force-sync -j$(nproc --all)

      - name: Clone OnePlus Kernel Source (to kernel_src)
        run: |
          cd kernel_workspace
          git clone https://github.com/stuffbykoko/kernel_oneplus_sm8650.git -b lineage-22.2 kernel_src
      
      - name: Build Kernel (Prebuilts + Clang + GCC + FAST Mode)
        run: |
          cd kernel_workspace/kernel_src

          # Kernel Version Select (You can pass this as env or set manually)
          KERNEL_VERSION="6.1"

          if [[ "$KERNEL_VERSION" == "6.6" ]]; then
            CLANG_PATH="clang-r510928"
            CLANG_DIR="kernel_platform/prebuilts"
          elif [[ "$KERNEL_VERSION" == "6.1" ]]; then
            CLANG_PATH="clang-r487747c"
            CLANG_DIR="kernel_platform/prebuilts"
          elif [[ "$KERNEL_VERSION" == "5.15" ]]; then
            CLANG_PATH="clang-r450784e"
            CLANG_DIR="kernel_platform/prebuilts"
          elif [[ "$KERNEL_VERSION" == "5.10" ]]; then
            CLANG_PATH="clang-r416183b"
            CLANG_DIR="kernel_platform/prebuilts-master"
            USE_LLVM_IAS=true
          else
            echo "‚ùå Unsupported Kernel Version: $KERNEL_VERSION"
            exit 1
          fi

          # Export Toolchains
          export CLANG_FULL_PATH=$GITHUB_WORKSPACE/kernel_workspace/$CLANG_DIR/clang/host/linux-x86/$CLANG_PATH/bin
          # export GCC_FULL_PATH=$GITHUB_WORKSPACE/kernel_workspace/kernel_platform/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-gnu/bin
          export PATH=$CLANG_FULL_PATH:$GCC_FULL_PATH:/usr/lib/ccache:$PATH
          export CC="ccache clang"

          sudo apt-get update
          sudo apt-get install -y libelf-dev ccache

          # Build Arguments
          MAKE_ARGS="LLVM=1 ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- \
            RUSTC=../../kernel_platform/prebuilts/rust/linux-x86/1.73.0b/bin/rustc \
            PAHOLE=../../kernel_platform/prebuilts/kernel-build-tools/linux-x86/bin/pahole \
            LD=ld.lld HOSTLD=ld.lld KCFLAGS+=-Wno-error"

          if [[ "$USE_LLVM_IAS" == "true" ]]; then
            MAKE_ARGS="LLVM_IAS=1 $MAKE_ARGS"
          fi

          echo "üåü Starting Kernel Build with $CLANG_PATH"
          make -j$(nproc --all) O=out $MAKE_ARGS gki_defconfig
          make -j$(nproc --all) O=out $MAKE_ARGS Image.gz


      - name: Upload Built Image.gz
        uses: actions/upload-artifact@v4
        with:
          name: Built-Image.gz
          path: kernel_workspace/kernel_src/out/arch/arm64/boot/Image.gz
